#!/usr/bin/env bash

readonly __bunyanVersion='0.1.0'

readonly __bunyanName=`basename $0`
readonly __bunyanHost=`hostname`
readonly __bunyanFormatVersion="0"

if [[ -z "$BUNYAN_LOGLEVEL" ]]; then
  __bunyanLevel="$BUNRYAN_LOGLEVEL"
else
  __bunyanLevel=30 # info
fi
__bunyanOutput="${BUNYAN_OUTPUT:-/dev/stderr}"

function __bunyan() {
  # arg 1 is LEVEL
  # arg 2 is MSG

  local now="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
  local level="$1"
  shift 
  local logMesg="$@"
  printf "{\"name\":\"%s\",\"hostname\":\"%s\",\"pid\":%s,\"level\":%d,\"msg\":\"%s\",\"time\":\"%s\",\"v\":%s}\n" \
    "$__bunyanName" "$__bunyanHost" "$$" "$level" "$logMesg" "$now" "$__bunyanFormatVersion" > "$__bunyanOutput"
}

function __bunyanSetOutput() {
  local newOutput="$1"
  if [[ -n "$newOutput" ]]; then
    __bunyanOutput="$newOutput"
  fi
}

function __bunyanSetLevel() {
  local newlevel="$1"

  case "$newlevel" in
    trace)
      __bunyanLevel=10
      ;;
    debug)
      __bunyanLevel=20
      ;;
    info)
      __bunyanLevel=30
      ;;
    warn)
      __bunyanLevel=40
      ;;
    error)
      __bunyanLevel=50
      ;;
    fatal)
      __bunyanLevel=60
      ;;
    *)
      printf "unknown log level '$newLevel'\n" >&2
      ;;
  esac
}


function trace() { 
  [[ $__bunyanLevel -le 10 ]] &&  __bunyan 10 "$@" 
}

function debug() { 
  [[ $__bunyanLevel -le 20 ]] && __bunyan 20 "$@" 
}

function info()  { 
  [[ $__bunyanLevel -le 30 ]] && __bunyan 30 "$@" 
}

function warn()  { 
  [[ $__bunyanLevel -le 40 ]] && __bunyan 40 "$@" 
}

function error() { 
  [[ $__bunyanLevel -le 50 ]] && __bunyan 50 "$@" 
}

function fatal() { 
  [[ $__bunyanLevel -le 60 ]] && __bunyan 60 "$@" 
}
