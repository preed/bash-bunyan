
readonly __BUNYAN_VERSION='0.2.1'

readonly __BUNYAN_SCRIPT_NAME=`basename $0`
readonly __BUNYAN_HOST=`hostname`
readonly __BUNYAN_FORMAT_VERSION="0"

# If this is set, all bunyan log messages will be redirected to this file,
# immaterial of where the caller set the output to go to. Useful for developer
# debugging.
readonly BUNYAN_OUTPUT_OVERRIDE="${BUNYAN_OUTPUT_OVERRIDE:-}"

__bunyanLevel="${BUNYAN_LOGLEVEL:-30}" # info
__bunyanOutput="${BUNYAN_OUTPUT:-/dev/stderr}"
__bunyanOutputDir="$(dirname "$__bunyanOutput")"

function __bunyan() {
  # arg 1 is LEVEL
  # arg 2 is MSG

  # If the target directory for the log doesn't exist, we won't emit the log
  # message. Users of this library need to deal ensure the parent directory
  # of the log is created.
  if [[ ! -d "$__bunyanOutputDir" ]]; then
    return
  fi

  local _now="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
  local _level="$1"
  shift
  local _logMesg="$@"
  printf "{\"name\":\"%s\",\"hostname\":\"%s\",\"pid\":%s,\"level\":%d,\"msg\":\"%s\",\"time\":\"%s\",\"v\":%s}\n" \
    "$__BUNYAN_SCRIPT_NAME" "$__BUNYAN_HOST" "$$" "$_level" "$_logMesg" "$_now" "$__BUNYAN_FORMAT_VERSION" >> "$__bunyanOutput"
}

function __bunyanSetOutput() {
  local _newOutput="$1"
  if [[ -n "$_newOutput" && -z "$BUNYAN_OUTPUT_OVERRIDE" ]]; then
    __bunyanOutput="$_newOutput"
    __bunyanOutputDir="$(dirname "$__bunyanOutput")"
  fi
}

function __bunyanSetLevel() {
  local _newlevel="$1"

  case "$_newlevel" in
    trace)
      __bunyanLevel=10
      ;;
    debug)
      __bunyanLevel=20
      ;;
    info)
      __bunyanLevel=30
      ;;
    warn)
      __bunyanLevel=40
      ;;
    error)
      __bunyanLevel=50
      ;;
    fatal)
      __bunyanLevel=60
      ;;
    *)
      printf "unknown log level '$_newLevel'\n" >&2
      ;;
  esac
}


function bunyan_trace() {
  [[ $__bunyanLevel -le 10 ]] &&  __bunyan 10 "$@"
}

function bunyan_debug() {
  [[ $__bunyanLevel -le 20 ]] && __bunyan 20 "$@"
}

function bunyan_info()  {
  [[ $__bunyanLevel -le 30 ]] && __bunyan 30 "$@"
}

function bunyan_warn()  {
  [[ $__bunyanLevel -le 40 ]] && __bunyan 40 "$@"
}

function bunyan_error() {
  [[ $__bunyanLevel -le 50 ]] && __bunyan 50 "$@"
}

function bunyan_fatal() {
  [[ $__bunyanLevel -le 60 ]] && __bunyan 60 "$@"
}
